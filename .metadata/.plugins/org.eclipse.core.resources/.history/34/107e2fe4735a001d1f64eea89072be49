package com.mindtree.omf.oms;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;

import com.mindtree.omf.oms.entity.Cuisine;
import com.mindtree.omf.oms.entity.Order;
import com.mindtree.omf.oms.entity.Restaurant;
import com.mindtree.omf.oms.service.OrderServiceImpl;
import com.mindtree.omf.rss.service.RestaurantServiceImpl;

class OrderServiceImplTest {
	
	@InjectMocks
	private OrderServiceImpl service;
	
	private List<Restaurant> restaurantList = new ArrayList<Restaurant>();
	private List<Order> orderList = new ArrayList<Order>();
	private List<Cuisine> cuisineList = new ArrayList<Cuisine>();

	@BeforeEach
	void setUp() throws Exception {
		restaurantList.add(new Restaurant(1, "Test Name 1", "Test Loc", 10));
		restaurantList.add(new Restaurant(2, "Test Name 2", "Test Loc", 10));

		cuisineList.add(new Cuisine(1, "Test Cuisine 1", 11, 1));
		cuisineList.add(new Cuisine(2, "Test Cuisine 2", 22, 2));
	}

	@Test
	void testGetTotalAmount() {
		when(service.getRestaurants()).thenReturn(restaurantList);
		assertTrue(restaurantList.equals(service.getRestaurants()));
	}

	@Test
	void testSaveOrderDetails() {
		fail("Not yet implemented");
	}

	@Test
	void testFindOrderDetails() {
		fail("Not yet implemented");
	}

	@Test
	void testGetAllOrders() {
		fail("Not yet implemented");
	}

	@Test
	void testDeleteOrder() {
		fail("Not yet implemented");
	}

	@Test
	void testSaveChangedOrderDetails() {
		fail("Not yet implemented");
	}

	@Test
	void testFetchDataAndSave() {
		fail("Not yet implemented");
	}

	@Test
	void testGetdeliveryDetail() {
		fail("Not yet implemented");
	}

	@Test
	void testDefaultSave() {
		fail("Not yet implemented");
	}

	@Test
	void testDefaultFetchAndSave() {
		fail("Not yet implemented");
	}

}
