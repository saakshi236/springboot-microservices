package com.mindtree.omf.oms;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.platform.runner.JUnitPlatform;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.reactive.AutoConfigureWebTestClient;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.google.gson.Gson;
import com.mindtree.omf.oms.controller.OrderController;
import com.mindtree.omf.oms.entity.Order;
import com.mindtree.omf.oms.service.OrderServiceImpl;

@AutoConfigureWebTestClient
@AutoConfigureMockMvc
@ExtendWith(MockitoExtension.class)
@RunWith(JUnitPlatform.class)
class OrderControllerTests {
	
	@Autowired
	private MockMvc mvc;
	
	@InjectMocks
	private OrderController controller;
	
	@Mock
	OrderServiceImpl service;
	
	private final String URI = "http://localhost:9002/order";

	@BeforeEach
	void setUp() throws Exception {
	}

	@Test
	void testGetTotalAmount() {
		assertTrue(true);
	}

	@Test
	void testSaveOrderDetails() {
		fail("Not yet implemented");
	}

	@Test
	void testSaveChangedOrderDetails() {
		fail("Not yet implemented");
	}

	@Test
	void testFindOrderDetails() throws Exception {
		String uri = URI + "/1";
		MvcResult mvcResult = this.mvc.perform(MockMvcRequestBuilders.get(uri).contentType(MediaType.APPLICATION_JSON_VALUE))
				.andReturn();

		int status = mvcResult.getResponse().getStatus();
		assertEquals(200, status);
		
		String content = mvcResult.getResponse().getContentAsString();
		Order order = new Gson().fromJson(content, Order.class);
		assertTrue(order != null);
	}

	@Test
	void testGetAllOrders() {
		fail("Not yet implemented");
	}

	@Test
	void testDeleteOrder() {
		fail("Not yet implemented");
	}

	@Test
	void testGetdeliveryDetail() {
		fail("Not yet implemented");
	}

}
